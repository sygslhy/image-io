name: Create Python Package for MacOS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  BUILD_TYPE: Release

jobs:
  build_and_test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12, macos-13, macos-14, macos-15]
        python-version: ["3.12"]

    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      id: sp1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check out image-io-libs from my repo
      uses: actions/checkout@v4
      with:
        repository: sygslhy/image-io-libs
        path: image_io_libs

    - name: Build third-party libs with -fPIC and install to /usr/local # remove firstly the installed libs from linux
      run : |
        brew install nasm
        sudo rm -rf /Library/Frameworks/Mono.framework
        brew uninstall --ignore-dependencies libpng libtiff
        mkdir  ${{github.workspace}}/image_io_libs/build
        cd ${{github.workspace}}/image_io_libs/build
        cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=/usr/local
        make
        sudo make install

    - name: Check out image-io
      uses: actions/checkout@v4

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel pytest numpy

    - name: Create the image-io python package for macOs
      run: |
        python setup.py bdist_wheel

    - name : Install cxx-image-io on MacOS
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install --no-index --find-links=${{github.workspace}}/dist/ cxx-image-io

    - if: contains(github.event.head_commit.message,'[NRT]')  # only checkout test repo when [NRT] in commit message
      name: Check out test-image-io from my repo
      uses: actions/checkout@v4
      with:
        lfs: 'true'
        repository: sygslhy/test-cxx-image-io
        path: test-cxx-image-io

    - if: contains(github.event.head_commit.message,'[NRT]')  # only run test when [NRT] in commit message
      name: Run NRT test for image-io
      run: |
        cd ${{github.workspace}}/test-cxx-image-io/
        pwd
        pytest -s

    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist_bdist_wheel_${{ matrix.os }}_${{ matrix.python-version }}
        path: dist/

  publish-to-test-pypi:
    if: contains(github.event.head_commit.message,'[Release]')  # only publish to Test PyPI when [Release] in commit message
    needs:
    - build_and_test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12, macos-13, macos-14, macos-15]
        python-version: ["3.12"]

    environment:
      name: testpypi
      url: https://test.pypi.org/project/cxx-image-io

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: dist_bdist_wheel_${{ matrix.os }}_${{ matrix.python-version }}
          path: dist/
      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          skip-existing: true

  test-download-package:
    if: contains(github.event.head_commit.message,'[Release]')  # only publish to Test PyPI when [Release] in commit
    needs:
    - publish-to-test-pypi
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12, macos-13, macos-14, macos-15]
        python-version: ["3.12"]
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      id: sp1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install cxx-image-io from test pypi
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install numpy
        pip3 install -i https://test.pypi.org/simple/ cxx-image-io
        python3 -c "import cxx_image_io; help(cxx_image_io.ImageMetadata)"


  publish-to-pypi:
    if: contains(github.event.head_commit.message,'[Release]')  # only publish to PyPI when [Release] in commit message
    needs:
    - test-download-package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12, macos-13, macos-14, macos-15]
        python-version: ["3.12"]

    environment:
      name: pypi
      url: https://pypi.org/project/cxx-image-io/

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: dist_bdist_wheel_${{ matrix.os }}_${{ matrix.python-version }}
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true