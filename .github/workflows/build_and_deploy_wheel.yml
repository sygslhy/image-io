name: Build and upload to PyPI

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04]

    steps:

      - if: matrix.os == 'macos-13' || matrix.os == 'macos-14'
        name: Remove firstly the installed libs from MacOS
        run : |
          brew install nasm
          sudo rm -rf /Library/Frameworks/Mono.framework
          brew uninstall --ignore-dependencies jpeg-turbo libpng libtiff

      - name: Check out image-io
        uses: actions/checkout@v4
        with:
         lfs: 'true'

      - if: matrix.os == 'ubuntu-24.04'
        name: Install cibuildwheel for Linux
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install setuptools wheel pytest numpy
          python3 -m pip install cibuildwheel==2.21.3

      - if: matrix.os == 'macos-13' || matrix.os == 'macos-14'
        name: Install cibuildwheel for MacOS
        run: |
          python3 -m pip install --upgrade pip --break-system-packages
          python3 -m pip install setuptools wheel pytest numpy --break-system-packages
          python3 -m pip install cibuildwheel==2.21.3 --break-system-packages

      - if: matrix.os == 'ubuntu-24.04'
        name: Build wheels for Linux
        run: python3 -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          CIBW_ARCHS: x86_64
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_BEFORE_ALL: >
            auditwheel --version &&
            yum install -y nasm &&
            git clone https://github.com/sygslhy/image-io-libs.git &&
            mkdir -p image-io-libs/build &&
            cd image-io-libs/build &&
            cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=/usr/local &&
            make install
          CIBW_BEFORE_BUILD: >
            rm -rf /usr/local/bin/python3*
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: >
            cd /project &&
            pytest -s
          CIBW_SKIP: pp* cp36-* cp37-* cp38-* cp39-* *musllinux*
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: "auditwheel repair -w {dest_dir} {wheel} --only-plat"
          CIBW_BUILD_VERBOSITY: 1


      - if: matrix.os == 'macos-13' || matrix.os == 'macos-14'
        name: Build wheels for MacOS
        run: python3 -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          MACOSX_DEPLOYMENT_TARGET: 11.0
          CIBW_BEFORE_ALL: >
            git clone https://github.com/sygslhy/image-io-libs.git &&
            mkdir -p image-io-libs/build &&
            cd image-io-libs/build &&
            cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=/usr/local &&
            sudo make install
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: >
            cd ${{github.workspace}} &&
            pytest -s
          CIBW_SKIP: pp* cp36-* cp37-* cp38-* cp39-*
          CIBW_BUILD_VERBOSITY: 1

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl